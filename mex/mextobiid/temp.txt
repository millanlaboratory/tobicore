@function [status] = icmessage_addclassifier(q, name, desc, vtype, ltype)
% Copyright (C) 2010 Michele Tavella <michele.tavella@epfl.ch>
% This file is part of the mextobiid wrapper
%
% ICMESSAGE_ADDCLASSIFIER Adds an ICClassifier to an ICMessage
%
% STATUS = ICMESSAGE_ADDCLASSIFIER(Q, NAME, DESC, VTYPE, LTYPE) Adds a new
% ICClassifier to the ICMessage Q. 
% NAME is the name of the classifier (i.e. "cnbi_mi"), DESC the description
% field (i.e. "CNBI MI Classifier").
% VTYPE is the numerical id of the value type (i.e. 0 for probabilities).
% LTYPE is the numerical id of the label type (i.e. 0 for Biosig labels).
% Returns 1 on success, 0 and prints a message on error otherwise.
%
% See also ICMESSAGE_GETVALUES, ICMESSAGE_GETLABELS
	$ bool addc(ICMessage* q, std::string* name, std::string* desc, int* vtype, int* ltype) {
	$	try {
	$ 		ICClassifier* c = new ICClassifier(*name, *desc, *vtype, *ltype);
	$ 		q->classifiers.Add(c);
	$	} catch(ICException e) {
	$		printf("[icmessage_addclassifier] Exception in libtobiic: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$		return false;
	$	}
	$	return true;
	$ }
	# std::string* sname = new std::string(cstring name);
	# std::string* sdesc = new std::string(cstring desc);
	# bool status = addc(ICMessage* q, std::string* sname, std::string* sdesc, int* vtype, int* ltype);

@function [status] = icmessage_addclass(q, name, label, value)
% Copyright (C) 2010 Michele Tavella <michele.tavella@epfl.ch>
% This file is part of the mextobiid wrapper
%
% ICMESSAGE_ADDCLASS Adds an ICClass to an ICClassifier
%
% STATUS = ICMESSAGE_ADDCLASS(Q, NAME, LABEL, VALUE) Adds a new
% ICClass to the ICClassifier called NAME in the ICMessage Q.
% NAME is the classifier name (i.e. "cnbi_mi").
% VALUE is the value (i.e. 0.75 for 'prob')
% LTYPE is the label (i.e. '0x781' for 'biosig')
% Returns 1 on success, 0 and prints an error otherwise.
%
% See also ICMESSAGE_GETVALUES, ICMESSAGE_GETLABELS, ICMESSAGE_ADDCLASSIFIER
	$ bool addk(ICMessage* q, std::string* name, std::string* label, float* value) {
	$	try {
	$		ICClassifier* c = q->classifiers.Get(*name);
	$		ICClass* k = new ICClass(*label, *value);
	$		c->classes.Add(k);
	$	} catch(ICException e) {
	$		printf("[icmessage_addclass] Exception in libtobiic: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$		return false;
	$	}
	$	return true;
	$ }
	# std::string* sname = new std::string(cstring name);
	# std::string* slabel = new std::string(cstring label);
	# bool status = addk(ICMessage* q, std::string* sname, std::string* slabel, float* value);

@function [retval] = icmessage_getvalue(q, name, label)
% Copyright (C) 2010 Michele Tavella <michele.tavella@epfl.ch>
% This file is part of the mextobiid wrapper
%
% ICMESSAGE_GETVALUE Returns the value of a specific ICClass
%
% [RETVAL, STATUS] = ICMESSAGE_GETVALUE(Q, NAME, LABEL) where Q is an ICMessage. 
% Returns the value RETVAL of ICClass with LABEL (i.e. '0x781' for 'biosig')
% belonging to ICClassifier NAME (i.e. 'cnbi_mi').
% STATUS is set to NaN if an error occurs.
%
% See also ICMESSAGE_SETVALUE, ICMESSAGE_ADDCLASS, ICMESSAGE_ADDCLASSIFIER,
% ICMESSAGE_NEW
	$ void getv(ICMessage* q, std::string* name, std::string* label, float* value) {
	$	try {
	$ 		(*value) = q->classifiers.Get(*name)->classes.Get(*label)->GetValue();
	$	} catch(ICException e) {
	$		printf("[icmessage_getvalue] Exception in libtobiic: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$ }
	retval = NaN;
	# std::string* sname = new std::string(cstring name);
	# std::string* slabel = new std::string(cstring label);
	# getv(ICMessage* q, std::string* sname, std::string* slabel, inout float* retval);

@function [status] = icmessage_setvalue(q, name, label, value)
% Copyright (C) 2010 Michele Tavella <michele.tavella@epfl.ch>
% This file is part of the mextobiid wrapper
%
% ICMESSAGE_SETVALUE Sets the value of a specific ICClass
%
% STATUS = ICMESSAGE_SETVALUE(Q, NAME, LABEL, VALUE) where Q is an ICMessage. 
% Sets the value of ICClass with LABEL (i.e. '0x781' for 'biosig') belonging to 
% ICClassifier NAME (i.e. 'cnbi_mi') to VALUE (i.e. '0.75' for 'prob').
% Returns 0 on error, 1 upon success.
% 
% See also ICMESSAGE_GETVALUE, ICMESSAGE_ADDCLASS, ICMESSAGE_ADDCLASSIFIER,
% ICMESSAGE_NEW
	$ bool setv(ICMessage* q, std::string* name, std::string* label, float* value) {
	$ 	try {
	$ 		q->classifiers.Get(*name)->classes.Get(*label)->SetValue(*value);
	$	} catch(ICException e) {
	$		printf("[icmessage_setvalue] Exception in libtobiic: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$		return false;
	$	}
	$	return true;
	$ }
	# std::string* sname = new std::string(cstring name);
	# std::string* slabel = new std::string(cstring label);
	# bool status = setv(ICMessage* q, std::string* sname, std::string* slabel, float* value);


@function [vtype] = icmessage_getvaluetype(name)
% Copyright (C) 2010 Michele Tavella <michele.tavella@epfl.ch>
% This file is part of the mextobiid wrapper
%
% ICMESSAGE_GETVALUETYPE Returns the numerical id of a value type
%
% VTYPE = ICMESSAGE_GETVALUETYPE(NAME) Returns the numerical id (i.e.
% 0) for the value type in NAME (i.e. 'prob').
%
% See also ICMESSAGE_GETVALUES
	$ int getvtype(char* buffer, int* vtype) {
	$	(*vtype) = ICClassifier::ValueType(buffer);
	$ } 
	$
	vtype = -1;
	# getvtype(cstring name, inout int* vtype);

@function [ltype] = icmessage_getlabeltype(name)
% Copyright (C) 2010 Michele Tavella <michele.tavella@epfl.ch>
% This file is part of the mextobiid wrapper
%
% ICMESSAGE_GETLABELTYPE Returns the numerical id of a label type
%
% LTYPE = ICMESSAGE_GETLABELTYPE(NAME) Returns the numerical id (i.e.
% 0) for the label type in NAME (i.e. 'biosig').
%
% See also ICMESSAGE_GETLABELS
	$ int getltype(char* buffer, int* ltype) {
	$	(*ltype) = ICClassifier::LabelType(buffer);
	$ } 
	$
	ltype = -1;
	# getltype(cstring name, inout int* ltype);

