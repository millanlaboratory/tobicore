%   Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
%   Michele Tavella <michele.tavella@epfl.ch>
%
%   This program is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   (at your option) any later version.
%
%   This program is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
%
%   You should have received a copy of the GNU General Public License
%   along with this program.  If not, see <http://www.gnu.org/licenses/>.

$ #include <tobicore/TCException.hpp>
$ #include <tobiplatform/TPiC.hpp>
$ #include <tobiplatform/TPiD.hpp>
$ #include <cstring>
$ #include <stdio.h>
$ #include <mex.h>


@function [c] = tpic_new();
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	# TPiC* c = new TPiC();

@function [c] = tpic_delete(c);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	# delete(TPiC* c);
	c = 0;

@function [retval, c] = tpic_plug(c, addr, port, asclient);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	$ int tpic_plug(TPiC* c, char* addr, char* port, bool client) {
	$	int retval = TPiD::Unsuccessful;
	$ 	try {
	$ 		std::string sAddr(addr);
	$ 		std::string sPort(port);
	$		retval = c->Plug(sAddr, sPort, client);
	$	} catch(TCException e) {
	$		mexPrintf("[tpic_plug] Exception in libtobiplatform: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$	return retval;
	$ } 
	$
	# int retval = tpic_plug(TPiC* c, cstring addr[64], cstring port[64], bool asclient);

@function [c] = tpic_unplug(c);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	$ void tpic_unplug(TPiC* c) {
	$ 	try {
	$		c->Unplug();
	$	} catch(TCException e) {
	$		mexPrintf("[tpic_unplug] Exception in libtobiplatform: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$ } 
	$
	# tpic_unplug(TPiC* c);

@function [retval, c] = tpic_set(c, s);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	$ int tpic_set(TPiC* c, ICSerializer* serializer) {
	$	int retval = TPiD::Unsuccessful;
	$ 	try {
	$		c->Set(serializer);
	$	} catch(TCException e) {
	$		mexPrintf("[tpic_set] Exception in libtobiplatform: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$	return retval;
	$ } 
	$
	# int retval = tpic_set(TPiC* c, ICSerializer* s);

@function [retval, c] = tpic_get(c, s);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	$ int tpic_get(TPiC* c, ICSerializer* serializer) {
	$	int retval = TPiD::Unsuccessful;
	$ 	try {
	$		c->Get(serializer);
	$	} catch(TCException e) {
	$		mexPrintf("[tpic_get] Exception in libtobiplatform: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$	return retval;
	$ } 
	$
	# int retval = tpic_get(TPiC* c, ICSerializer* s);

@function [d] = tpid_new();
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	# TPiD* d = new TPiD();

@function [d] = tpid_delete(d);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	# delete(TPiD* d);
	d = 0;

@function [retval, d] = tpid_plug(d, addr, port, asclient);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	$ int tpid_plug(TPiD* d, char* addr, char* port, bool client) {
	$	int retval = TPiD::Unsuccessful;
	$ 	try {
	$ 		std::string sAddr(addr);
	$ 		std::string sPort(port);
	$		retval = d->Plug(sAddr, sPort, client);
	$	} catch(TCException e) {
	$		mexPrintf("[tpid_plug] Exception in libtobiplatform: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$	return retval;
	$ } 
	$
	# int retval = tpid_plug(TPiD* d, cstring addr[64], cstring port[64], bool asclient);

@function [d] = tpid_unplug(d);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	$ void tpid_unplug(TPiD* d) {
	$ 	try {
	$		d->Unplug();
	$	} catch(TCException e) {
	$		mexPrintf("[tpid_unplug] Exception in libtobiplatform: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$ } 
	$
	# tpid_unplug(TPiD* d);

@function [retval, c] = tpid_set(c, s);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	$ int tpid_set(TPiD* c, IDSerializer* serializer, int bidx, int* abidx) {
	$	int retval = TPiD::Unsuccessful;
	$ 	try {
	$		c->Set(serializer, bidx, abidx);
	$	} catch(TCException e) {
	$		mexPrintf("[tpid_set] Exception in libtobiplatform: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$	return retval;
	$ } 
	$
	# int abidx = -1;
	# int retval = tpid_set(TPiD* c, IDSerializer* s, int bidx, [inout] int* abidx);

@function [retval, c] = tpid_get(c, s);
% Copyright (C) 2009-2011  EPFL (Ecole Polytechnique Fédérale de Lausanne)
% Michele Tavella <michele.tavella@epfl.ch>
%
% TODO
	$ int tpid_get(TPiD* c, IDSerializer* serializer) {
	$	int retval = TPiD::Unsuccessful;
	$ 	try {
	$		c->Get(serializer);
	$	} catch(TCException e) {
	$		mexPrintf("[tpid_get] Exception in libtobiplatform: %s, %s\n",
	$			e.GetCaller().c_str(), e.GetInfo().c_str());
	$	}
	$	return retval;
	$ } 
	$
	# int retval = tpid_get(TPiD* c, IDSerializer* s);
